#!/usr/bin/env bash
# A script to create Telegram themes that use colors generated by pywal/wal.
# Requires pywal (or wal) and zip.

pre="${HOME}/.wal-telegram"

# shellcheck source=/dev/null
. "${HOME}/.cache/wal/colors.sh"

# Prepare the conditions for the other functions.
prepare() {
  b1='\033[1;31m'
  b2='\033[1;32m' b3='\033[1;37m' n='\033[0;37m'
  e='\033[0m'
  rm -f "${pre}/wal.tdesktop-theme"
  rm -f "${pre}/background".*
  wal_path="$(<"${HOME}/.cache/wal/wal")"
  wal_ext="${wal_path##*.}"
  # shellcheck disable=SC2059,1117
  printf "[${b2}I${n}] ${b1}image${n}: Using image ${b3}${wal_path##*/}${n}.${e}\n"
  cp "$wal_path" "${pre}/background.${wal_ext}"
  # shellcheck disable=SC2059,1117
  printf "[${b2}I${n}] ${b1}preparation${n}: Removed old theme's components.${e}\n"
}

# Lighten/darken by 20%, 30%, 40%, 50%, 60% some colors using only pure bash.
create_colors() {
  colors=(0 1 2 7)
  for i in "${colors[@]}"; do
    color="color${i}"
    c_rgb_12d="$(( 0x"${!color:1:2}" ))"
    c_rgb_34d="$(( 0x"${!color:3:2}" ))"
    c_rgb_56d="$(( 0x"${!color:5:2}" ))"
    c_rgb_12d_20l="$(( c_rgb_12d + "$((c_rgb_12d / 5))" ))"
    c_rgb_34d_20l="$(( c_rgb_34d + "$((c_rgb_34d / 5))" ))"
    c_rgb_56d_20l="$(( c_rgb_56d + "$((c_rgb_56d / 5))" ))"
    [[ "${c_rgb_12d_20l}" -ge 255 ]] && c_rgb_12d_20l=255
    [[ "${c_rgb_34d_20l}" -ge 255 ]] && c_rgb_34d_20l=255
    [[ "${c_rgb_56d_20l}" -ge 255 ]] && c_rgb_56d_20l=255
    printf -v c_hex_12d_20l '%x' "$c_rgb_12d_20l"
    printf -v c_hex_34d_20l '%x' "$c_rgb_34d_20l"
    printf -v c_hex_56d_20l '%x' "$c_rgb_56d_20l"
    [[ "${#c_hex_12d_20l}" -eq 1 ]] && c_hex_12d_20l="0${c_hex_12d_20l}"
    [[ "${#c_hex_34d_20l}" -eq 1 ]] && c_hex_34d_20l="0${c_hex_34d_20l}"
    [[ "${#c_hex_56d_20l}" -eq 1 ]] && c_hex_56d_20l="0${c_hex_56d_20l}"
    c_hex_20l="#${c_hex_12d_20l}${c_hex_34d_20l}${c_hex_56d_20l}"
    declare -g color"${i}"_lighter_20="$c_hex_20l"
    c_rgb_12d_30l="$(( c_rgb_12d + "$((c_rgb_12d * 3 / 10))" ))"
    c_rgb_34d_30l="$(( c_rgb_34d + "$((c_rgb_34d * 3 / 10))" ))"
    c_rgb_56d_30l="$(( c_rgb_56d + "$((c_rgb_56d * 3 / 10))" ))"
    [[ "${c_rgb_12d_30l}" -ge 255 ]] && c_rgb_12d_30l=255
    [[ "${c_rgb_34d_30l}" -ge 255 ]] && c_rgb_34d_30l=255
    [[ "${c_rgb_56d_30l}" -ge 255 ]] && c_rgb_56d_30l=255
    printf -v c_hex_12d_30l '%x' "$c_rgb_12d_30l"
    printf -v c_hex_34d_30l '%x' "$c_rgb_34d_30l"
    printf -v c_hex_56d_30l '%x' "$c_rgb_56d_30l"
    [[ "${#c_hex_12d_30l}" -eq 1 ]] && c_hex_12d_30l="0${c_hex_12d_30l}"
    [[ "${#c_hex_34d_30l}" -eq 1 ]] && c_hex_34d_30l="0${c_hex_34d_30l}"
    [[ "${#c_hex_56d_30l}" -eq 1 ]] && c_hex_56d_30l="0${c_hex_56d_30l}"
    c_hex_30l="#${c_hex_12d_30l}${c_hex_34d_30l}${c_hex_56d_30l}"
    declare -g color"${i}"_lighter_30="$c_hex_30l"
    c_rgb_12d_40l="$(( c_rgb_12d + "$((c_rgb_12d * 2 / 5))" ))"
    c_rgb_34d_40l="$(( c_rgb_34d + "$((c_rgb_34d * 2 / 5))" ))"
    c_rgb_56d_40l="$(( c_rgb_56d + "$((c_rgb_56d * 2 / 5))" ))"
    [[ "${c_rgb_12d_40l}" -ge 255 ]] && c_rgb_12d_40l=255
    [[ "${c_rgb_34d_40l}" -ge 255 ]] && c_rgb_34d_40l=255
    [[ "${c_rgb_56d_40l}" -ge 255 ]] && c_rgb_56d_40l=255
    printf -v c_hex_12d_40l '%x' "$c_rgb_12d_40l"
    printf -v c_hex_34d_40l '%x' "$c_rgb_34d_40l"
    printf -v c_hex_56d_40l '%x' "$c_rgb_56d_40l"
    [[ "${#c_hex_12d_40l}" -eq 1 ]] && c_hex_12d_40l="0${c_hex_12d_40l}"
    [[ "${#c_hex_34d_40l}" -eq 1 ]] && c_hex_34d_40l="0${c_hex_34d_40l}"
    [[ "${#c_hex_56d_40l}" -eq 1 ]] && c_hex_56d_40l="0${c_hex_56d_40l}"
    c_hex_40l="#${c_hex_12d_40l}${c_hex_34d_40l}${c_hex_56d_40l}"
    declare -g color"${i}"_lighter_40="$c_hex_40l"
    c_rgb_12d_50l="$(( c_rgb_12d + "$((c_rgb_12d / 2))" ))"
    c_rgb_34d_50l="$(( c_rgb_34d + "$((c_rgb_34d / 2))" ))"
    c_rgb_56d_50l="$(( c_rgb_56d + "$((c_rgb_56d / 2))" ))"
    [[ "${c_rgb_12d_50l}" -ge 255 ]] && c_rgb_12d_50l=255
    [[ "${c_rgb_34d_50l}" -ge 255 ]] && c_rgb_34d_50l=255
    [[ "${c_rgb_56d_50l}" -ge 255 ]] && c_rgb_56d_50l=255
    printf -v c_hex_12d_50l '%x' "$c_rgb_12d_50l"
    printf -v c_hex_34d_50l '%x' "$c_rgb_34d_50l"
    printf -v c_hex_56d_50l '%x' "$c_rgb_56d_50l"
    [[ "${#c_hex_12d_50l}" -eq 1 ]] && c_hex_12d_50l="0${c_hex_12d_50l}"
    [[ "${#c_hex_34d_50l}" -eq 1 ]] && c_hex_34d_50l="0${c_hex_34d_50l}"
    [[ "${#c_hex_56d_50l}" -eq 1 ]] && c_hex_56d_50l="0${c_hex_56d_50l}"
    c_hex_50l="#${c_hex_12d_50l}${c_hex_34d_50l}${c_hex_56d_50l}"
    declare -g color"${i}"_lighter_50="$c_hex_50l"
    c_rgb_12d_60l="$(( c_rgb_12d + "$((c_rgb_12d * 3 / 5))" ))"
    c_rgb_34d_60l="$(( c_rgb_34d + "$((c_rgb_34d * 3 / 5))" ))"
    c_rgb_56d_60l="$(( c_rgb_56d + "$((c_rgb_56d * 3 / 5))" ))"
    [[ "${c_rgb_12d_60l}" -ge 255 ]] && c_rgb_12d_60l=255
    [[ "${c_rgb_34d_60l}" -ge 255 ]] && c_rgb_34d_60l=255
    [[ "${c_rgb_56d_60l}" -ge 255 ]] && c_rgb_56d_60l=255
    printf -v c_hex_12d_60l '%x' "$c_rgb_12d_60l"
    printf -v c_hex_34d_60l '%x' "$c_rgb_34d_60l"
    printf -v c_hex_56d_60l '%x' "$c_rgb_56d_60l"
    [[ "${#c_hex_12d_60l}" -eq 1 ]] && c_hex_12d_60l="0${c_hex_12d_60l}"
    [[ "${#c_hex_34d_60l}" -eq 1 ]] && c_hex_34d_60l="0${c_hex_34d_60l}"
    [[ "${#c_hex_56d_60l}" -eq 1 ]] && c_hex_56d_60l="0${c_hex_56d_60l}"
    c_hex_60l="#${c_hex_12d_60l}${c_hex_34d_60l}${c_hex_56d_60l}"
    declare -g color"${i}"_lighter_60="$c_hex_60l"
    c_rgb_12d_20d="$(( c_rgb_12d - "$((c_rgb_12d / 5))" ))"
    c_rgb_34d_20d="$(( c_rgb_34d - "$((c_rgb_34d / 5))" ))"
    c_rgb_56d_20d="$(( c_rgb_56d - "$((c_rgb_56d / 5))" ))"
    printf -v c_hex_12d_20d '%x' "$c_rgb_12d_20d"
    printf -v c_hex_34d_20d '%x' "$c_rgb_34d_20d"
    printf -v c_hex_56d_20d '%x' "$c_rgb_56d_20d"
    [[ "${#c_hex_12d_20d}" -eq 1 ]] && c_hex_12d_20d="0${c_hex_12d_20d}"
    [[ "${#c_hex_34d_20d}" -eq 1 ]] && c_hex_34d_20d="0${c_hex_34d_20d}"
    [[ "${#c_hex_56d_20d}" -eq 1 ]] && c_hex_56d_20d="0${c_hex_56d_20d}"
    c_hex_20d="#${c_hex_12d_20d}${c_hex_34d_20d}${c_hex_56d_20d}"
    declare -g color"${i}"_darker_20="$c_hex_20d"
    c_rgb_12d_30d="$(( c_rgb_12d - "$((c_rgb_12d * 3 / 10))" ))"
    c_rgb_34d_30d="$(( c_rgb_34d - "$((c_rgb_34d * 3 / 10))" ))"
    c_rgb_56d_30d="$(( c_rgb_56d - "$((c_rgb_56d * 3 / 10))" ))"
    printf -v c_hex_12d_30d '%x' "$c_rgb_12d_30d"
    printf -v c_hex_34d_30d '%x' "$c_rgb_34d_30d"
    printf -v c_hex_56d_30d '%x' "$c_rgb_56d_30d"
    [[ "${#c_hex_12d_30d}" -eq 1 ]] && c_hex_12d_30d="0${c_hex_12d_30d}"
    [[ "${#c_hex_34d_30d}" -eq 1 ]] && c_hex_34d_30d="0${c_hex_34d_30d}"
    [[ "${#c_hex_56d_30d}" -eq 1 ]] && c_hex_56d_30d="0${c_hex_56d_30d}"
    c_hex_30d="#${c_hex_12d_30d}${c_hex_34d_30d}${c_hex_56d_30d}"
    declare -g color"${i}"_darker_30="$c_hex_30d"
    c_rgb_12d_40d="$(( c_rgb_12d - "$((c_rgb_12d * 2 / 5))" ))"
    c_rgb_34d_40d="$(( c_rgb_34d - "$((c_rgb_34d * 2 / 5))" ))"
    c_rgb_56d_40d="$(( c_rgb_56d - "$((c_rgb_56d * 2 / 5))" ))"
    printf -v c_hex_12d_40d '%x' "$c_rgb_12d_40d"
    printf -v c_hex_34d_40d '%x' "$c_rgb_34d_40d"
    printf -v c_hex_56d_40d '%x' "$c_rgb_56d_40d"
    [[ "${#c_hex_12d_40d}" -eq 1 ]] && c_hex_12d_40d="0${c_hex_12d_40d}"
    [[ "${#c_hex_34d_40d}" -eq 1 ]] && c_hex_34d_40d="0${c_hex_34d_40d}"
    [[ "${#c_hex_56d_40d}" -eq 1 ]] && c_hex_56d_40d="0${c_hex_56d_40d}"
    c_hex_40d="#${c_hex_12d_40d}${c_hex_34d_40d}${c_hex_56d_40d}"
    declare -g color"${i}"_darker_40="$c_hex_40d"
    c_rgb_12d_50d="$(( c_rgb_12d - "$((c_rgb_12d / 2))" ))"
    c_rgb_34d_50d="$(( c_rgb_34d - "$((c_rgb_34d / 2))" ))"
    c_rgb_56d_50d="$(( c_rgb_56d - "$((c_rgb_56d / 2))" ))"
    printf -v c_hex_12d_50d '%x' "$c_rgb_12d_50d"
    printf -v c_hex_34d_50d '%x' "$c_rgb_34d_50d"
    printf -v c_hex_56d_50d '%x' "$c_rgb_56d_50d"
    [[ "${#c_hex_12d_50d}" -eq 1 ]] && c_hex_12d_50d="0${c_hex_12d_50d}"
    [[ "${#c_hex_34d_50d}" -eq 1 ]] && c_hex_34d_50d="0${c_hex_34d_50d}"
    [[ "${#c_hex_56d_50d}" -eq 1 ]] && c_hex_56d_50d="0${c_hex_56d_50d}"
    c_hex_50d="#${c_hex_12d_50d}${c_hex_34d_50d}${c_hex_56d_50d}"
    declare -g color"${i}"_darker_50="$c_hex_50d"
    c_rgb_12d_60d="$(( c_rgb_12d - "$((c_rgb_12d * 3 / 5))" ))"
    c_rgb_34d_60d="$(( c_rgb_34d - "$((c_rgb_34d * 3 / 5))" ))"
    c_rgb_56d_60d="$(( c_rgb_56d - "$((c_rgb_56d * 3 / 5))" ))"
    printf -v c_hex_12d_60d '%x' "$c_rgb_12d_60d"
    printf -v c_hex_34d_60d '%x' "$c_rgb_34d_60d"
    printf -v c_hex_56d_60d '%x' "$c_rgb_56d_60d"
    [[ "${#c_hex_12d_60d}" -eq 1 ]] && c_hex_12d_60d="0${c_hex_12d_60d}"
    [[ "${#c_hex_34d_60d}" -eq 1 ]] && c_hex_34d_60d="0${c_hex_34d_60d}"
    [[ "${#c_hex_56d_60d}" -eq 1 ]] && c_hex_56d_60d="0${c_hex_56d_60d}"
    c_hex_60d="#${c_hex_12d_60d}${c_hex_34d_60d}${c_hex_56d_60d}"
    declare -g color"${i}"_darker_60="$c_hex_60d"
  done
  # shellcheck disable=SC2059,1117
  printf "[${b2}I${n}] ${b1}colors${n}: Generated variants of wal's colors.${e}\n"
}

# "Inject" the generated colors into colors.tdesktop-theme.
inject() {
  # shellcheck disable=SC2154
  sed -i -e "s/^color0: #.*;/color0: ${color0};/" \
         -e "s/^color1: #.*;/color1: ${color1};/" \
         -e "s/^color2: #.*;/color2: ${color2};/" \
         -e "s/^color3: #.*;/color3: ${color3};/" \
         -e "s/^color4: #.*;/color4: ${color4};/" \
         -e "s/^color5: #.*;/color5: ${color5};/" \
         -e "s/^color6: #.*;/color6: ${color6};/" \
         -e "s/^color7: #.*;/color7: ${color7};/" \
         -e "s/^color8: #.*;/color8: ${color8};/" \
         -e "s/^colorLighter0_20: #.*;/colorLighter0_20: ${color0_lighter_20};/" \
         -e "s/^colorLighter0_30: #.*;/colorLighter0_30: ${color0_lighter_30};/" \
         -e "s/^colorLighter0_40: #.*;/colorLighter0_40: ${color0_lighter_40};/" \
         -e "s/^colorLighter0_50: #.*;/colorLighter0_50: ${color0_lighter_50};/" \
         -e "s/^colorLighter0_60: #.*;/colorLighter0_60: ${color0_lighter_60};/" \
         -e "s/^colorDarker0_20: #.*;/colorDarker0_20: ${color0_darker_20};/" \
         -e "s/^colorDarker0_30: #.*;/colorDarker0_30: ${color0_darker_30};/" \
         -e "s/^colorDarker0_40: #.*;/colorDarker0_40: ${color0_darker_40};/" \
         -e "s/^colorDarker0_50: #.*;/colorDarker0_50: ${color0_darker_50};/" \
         -e "s/^colorDarker0_60: #.*;/colorDarker0_60: ${color0_darker_60};/" \
         -e "s/^colorLighter1_20: #.*;/colorLighter1_20: ${color1_lighter_20};/" \
         -e "s/^colorLighter1_30: #.*;/colorLighter1_30: ${color1_lighter_30};/" \
         -e "s/^colorLighter1_40: #.*;/colorLighter1_40: ${color1_lighter_40};/" \
         -e "s/^colorLighter1_50: #.*;/colorLighter1_50: ${color1_lighter_50};/" \
         -e "s/^colorLighter1_60: #.*;/colorLighter1_60: ${color1_lighter_60};/" \
         -e "s/^colorDarker1_20: #.*;/colorDarker1_20: ${color1_darker_20};/" \
         -e "s/^colorDarker1_30: #.*;/colorDarker1_30: ${color1_darker_30};/" \
         -e "s/^colorDarker1_40: #.*;/colorDarker1_40: ${color1_darker_40};/" \
         -e "s/^colorDarker1_50: #.*;/colorDarker1_50: ${color1_darker_50};/" \
         -e "s/^colorDarker1_60: #.*;/colorDarker1_60: ${color1_darker_60};/" \
         -e "s/^colorLighter2_20: #.*;/colorLighter2_20: ${color2_lighter_20};/" \
         -e "s/^colorLighter2_30: #.*;/colorLighter2_30: ${color2_lighter_30};/" \
         -e "s/^colorLighter2_40: #.*;/colorLighter2_40: ${color2_lighter_40};/" \
         -e "s/^colorLighter2_50: #.*;/colorLighter2_50: ${color2_lighter_50};/" \
         -e "s/^colorLighter2_60: #.*;/colorLighter2_60: ${color2_lighter_60};/" \
         -e "s/^colorDarker2_20: #.*;/colorDarker2_20: ${color2_darker_20};/" \
         -e "s/^colorDarker2_30: #.*;/colorDarker2_30: ${color2_darker_30};/" \
         -e "s/^colorDarker2_40: #.*;/colorDarker2_40: ${color2_darker_40};/" \
         -e "s/^colorDarker2_50: #.*;/colorDarker2_50: ${color2_darker_50};/" \
         -e "s/^colorDarker2_60: #.*;/colorDarker2_60: ${color2_darker_60};/" \
         -e "s/^colorLighter7_20: #.*;/colorLighter7_20: ${color7_lighter_20};/" \
         -e "s/^colorLighter7_30: #.*;/colorLighter7_30: ${color7_lighter_30};/" \
         -e "s/^colorLighter7_40: #.*;/colorLighter7_40: ${color7_lighter_40};/" \
         -e "s/^colorLighter7_50: #.*;/colorLighter7_50: ${color7_lighter_50};/" \
         -e "s/^colorLighter7_60: #.*;/colorLighter7_60: ${color7_lighter_60};/" \
         -e "s/^colorDarker7_20: #.*;/colorDarker7_20: ${color7_darker_20};/" \
         -e "s/^colorDarker7_30: #.*;/colorDarker7_30: ${color7_darker_30};/" \
         -e "s/^colorDarker7_40: #.*;/colorDarker7_40: ${color7_darker_40};/" \
         -e "s/^colorDarker7_50: #.*;/colorDarker7_50: ${color7_darker_50};/" \
         -e "s/^colorDarker7_60: #.*;/colorDarker7_60: ${color7_darker_60};/" \
         -e "s/^colorAlpha0_18: #.*;/colorAlpha0_18: ${color0}18;/" \
         -e "s/^colorAlpha0_3c: #.*;/colorAlpha0_3c: ${color0}3c;/" \
         -e "s/^colorAlpha0_03: #.*;/colorAlpha0_03: ${color0}03;/" \
         -e "s/^colorAlpha0_7f: #.*;/colorAlpha0_7f: ${color0}7f;/" \
         -e "s/^colorAlpha0_b0: #.*;/colorAlpha0_b0: ${color0}b0;/" \
         -e "s/^colorAlpha0_cc: #.*;/colorAlpha0_cc: ${color0}cc;/" \
         -e "s/^colorAlpha0_00: #.*;/colorAlpha0_00: ${color0}00;/" \
         -e "s/^colorAlpha0_54: #.*;/colorAlpha0_54: ${color0}54;/" \
         -e "s/^colorAlpha0_56: #.*;/colorAlpha0_56: ${color0}56;/" \
         -e "s/^colorAlpha0_74: #.*;/colorAlpha0_74: ${color0}74;/" \
         -e "s/^colorAlpha0_40: #.*;/colorAlpha0_40: ${color0}40;/" \
         -e "s/^colorAlpha0_4c: #.*;/colorAlpha0_4c: ${color0}4c;/" \
         -e "s/^colorAlpha0_b2: #.*;/colorAlpha0_b2: ${color0}b2;/" \
         -e "s/^colorAlpha0_40: #.*;/colorAlpha0_40: ${color0}40;/" \
         -e "s/^colorAlpha1_10: #.*;/colorAlpha1_10: ${color1}10;/" \
         -e "s/^colorAlpha1_33: #.*;/colorAlpha1_33: ${color1}33;/" \
         -e "s/^colorAlpha2_c8: #.*;/colorAlpha2_c8: ${color2}c8;/" \
         -e "s/^colorAlpha2_4c: #.*;/colorAlpha2_4c: ${color2}4c;/" \
         -e "s/^colorAlpha2_7f: #.*;/colorAlpha2_7f: ${color2}7f;/" \
         -e "s/^colorAlpha2_00: #.*;/colorAlpha2_00: ${color2}00;/" \
         -e "s/^colorAlpha2_87: #.*;/colorAlpha2_87: ${color2}87;/" \
         -e "s/^colorAlpha3_64: #.*;/colorAlpha3_64: ${color3}64;/" \
         -e "s/^colorAlpha7_53: #.*;/colorAlpha7_53: ${color7}53;/" \
         -e "s/^colorAlpha7_7a: #.*;/colorAlpha7_7a: ${color7}7a;/" \
         -e "s/^colorAlpha7_1a: #.*;/colorAlpha7_1a: ${color7}1a;/" \
         -e "s/^colorAlpha7_2c: #.*;/colorAlpha7_2c: ${color7}2c;/" \
         -e "s/^colorAlpha7_7f: #.*;/colorAlpha7_7f: ${color7}7f;/" \
         -e "s/^colorAlpha7_bc: #.*;/colorAlpha7_bc: ${color7}bc;/" \
         -e "s/^colorAlpha7_4c: #.*;/colorAlpha7_4c: ${color7}4c;/" \
         -e "s/^colorAlpha7_6b: #.*;/colorAlpha7_6b: ${color7}6b;/" \
         -e "s/^colorAlpha7_14: #.*;/colorAlpha7_14: ${color7}14;/" \
         "${pre}/colors.tdesktop-theme"
  # shellcheck disable=SC2059,1117
  printf "[${b2}I${n}] ${b1}colors${n}: Set theme's colors.${e}\n"
}

# Assemble the theme.
assemble() {
  # I really don't know why, but with something like this, Telegram wouldn't
  # accept the theme:
  #
  # zip --quiet "${pre}/wal.tdesktop-theme" \
  #             "${pre}/colors.tdesktop-theme" \
  #             "${pre}/background.${wal_ext}"
  #
  # That's some archaic existential mystery.
  #
  cd "$pre" || exit 1
  zip --quiet wal.tdesktop-theme colors.tdesktop-theme "background.${wal_ext}"
  # shellcheck disable=SC2059,1117
  printf "[${b2}I${n}] ${b1}finalization${n}: Theme assembled.${e}\n"
}

main() {
  prepare
  create_colors
  inject
  assemble
}

main
